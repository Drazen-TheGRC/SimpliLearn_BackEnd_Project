Developing a Backend Admin for Learner’s Academy.

DESCRIPTION

Project objective: 

As a Full Stack Developer, design and develop a backend administrative portal for the 
Learner’s Academy. Use the GitHub repository to manage the project artifacts. 

 

Background of the problem statement:

Learner’s Academy is a school that has an online management system. 
The system keeps track of its classes, subjects, students, and teachers. 
It has a back-office application with a single administrator login.

 

The administrator can:

● Set up a master list of all the subjects for all the classes
● Set up a master list of all the teachers
● Set up a master list of all the classes
● Assign classes for subjects from the master list
● Assign teachers to a class for a subject (A teacher can be assigned to different classes for different subjects)
● Get a master list of students (Each student must be assigned to a single class)
     

There will be an option to view a Class Report which will show all the information about the class, 
such as the list of students, subjects, and teachers
     
The goal of the company is to deliver a high-end quality product as early as possible. 

 

The flow and features of the application: 

● Plan more than two sprints to complete the application
● Document the flow of the application and prepare a flow chart 
● List the core concepts and algorithms being used to complete this application
● Implement the appropriate concepts, such as exceptions, collections, 
and sorting techniques for source code optimization and increased performance 


You must use the following: 

● Eclipse/IntelliJ: An IDE to code for the application 
● Java: A programming language to develop the web pages, databases, and others
● SQL: To create tables for admin, classes, students, and other specifics
● Git: To connect and push files from the local system to GitHub 
● GitHub: To store the application code and track its versions 
● Scrum: An efficient agile framework to deliver the product incrementally 
● Search and Sort techniques: Data structures used for the project 
● Specification document: Any open-source document or Google Docs 

 

The following requirements should be met: 

● The source code should be pushed to your GitHub repository. 
You need to document the steps and write the algorithms in it.
● The submission of your GitHub repository link is mandatory. 
In order to track your task, you need to share the link of the repository. 
You can add a section in your document. 
● Document the process step-by-step starting from sprint planning to the product release. 
● The application should not close, exit, or throw an exception if the user specifies an invalid input.
● You need to submit the final specification document which will include: 
● Project and developer details 
● Sprints planned and the tasks achieved in them 
● Algorithms and flowcharts of the application 
● Core concepts used in the project 
● Links to the GitHub repository to verify the project completion  